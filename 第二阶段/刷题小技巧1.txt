首先明确 刷一道题 都需要什么？
1.java类库 例如 split() nextInt() 等等
2.java语法
	1.判断 if、三元表达式（三元操作符）
	2.循环 for、while
	3.变量 int long String 
	4.数组 int[] 

你会发现就这几样，他们组合到一起完成某种逻辑计算 然后解决问题

我们的目标是把题 又快 又好 的解决掉 
那么我们想提高自己 从以上几条中如何入手呢？

1.在java类库方面 
	java提供了丰富的工具类 例如String Math BigInteger
	很简单 去看java Api（帮助文档）熟悉常用的方法、类
	只要你足够熟悉，那么在 水题（简单的意思）阶段，你的
	刷题速度会快到飞起

2.在java语法方面
	充分利用java语言的特性
	1.面向对象编程
		这个你们可能不理解，在以后随着问题的复杂 定义变量的过程中（不止定义变量）
		多个变量的混杂和命名会让你头痛不已，会自然把这些变量包装成类的
		你现在要有这个意识更好（但是不要死心眼 一个int a 能解决的 非得包成类）
	2.灵活的使用数组 变量 去模拟题的要求
		这里呢比较笼统 怎么个灵活法 需要特性场景展现 你才会感叹原来数组还能这么用
		大量的刷题 大量的见识题的解法 培养自己的对题的敏感 （在未来我会找一些典型题）
	3.优雅（目前阶段是优雅的）的递归
		1.代码量极少就可以解决问题
		2.缺点也很明显 容易写懵
	4.for循环：模拟迭代
		1.典型题 母牛的故事等等
		2.正着循环（从左到右）
		3.反着循环（从右到左）
		4.跳着循环（可以减少时间复杂度）
		5.for循环就是遍历 就是 一个一个的查看 意味着什么？名词：搜索

3.在个人素质方面 		
	1.多背几个数学公式 在特定方面极其高效 
	  比如 n*（n+1）/ 2 就替代了 你从1循环到n
	2.数据结构（目前你们基础不行 这个是下学期你们要搞得 现在听个名词）
	3.学会百度 学习他人的代码 学习好的解法 举一反三
	4.得努力 学程序 竟然不敲代码？？ 你学啥呢？？

4.在思想层面
	1.要有编程规范的意识 良好的编程规范 会让你的代码质量得到保障
	  编程规范指的是啥？
		1.变量命名 禁止拼音 尽量起英文名字 不会单词就百度！！
		  刷题追求速度 起名字占时间怎么半？
		     只要你足够熟 起名字 不占时间
		     使用英文简写 例如 Object obj 
		2.代码缩进 
		     当你本来就被题搞得烦躁，一团不美观的代码 只会让你更遭
		3.重复的语句 抽出来 写成一个方法
		     经常会遇到 只有一两个变量 其余的一模一样的代码块
		     新手一般都是复制粘贴 就会出现看的蠢的要命的代码
	2.学会总结
	  刷过的题 再遇到 竟然忘了自己上次咋做的 要重新思考 然后解决
	  不觉得这样很匪夷所思嘛？？？ 所以要经常浏览自己的git记录没事看看 当初的解法
	  说不定还能优化一下	








		
	






